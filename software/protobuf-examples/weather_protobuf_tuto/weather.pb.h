/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_WEATHER_PB_H_INCLUDED
#define PB_WEATHER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Data {
    float temperature;
    int32_t humidity;
    int32_t air_pressure;
    int32_t wind_speed;
    int32_t wind_direction;
} Data;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Data_init_default                        {0, 0, 0, 0, 0}
#define Data_init_zero                           {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Data_temperature_tag                     1
#define Data_humidity_tag                        2
#define Data_air_pressure_tag                    3
#define Data_wind_speed_tag                      4
#define Data_wind_direction_tag                  5

/* Struct field encoding specification for nanopb */
#define Data_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       1) \
X(a, STATIC,   REQUIRED, INT32,    humidity,          2) \
X(a, STATIC,   REQUIRED, INT32,    air_pressure,      3) \
X(a, STATIC,   REQUIRED, INT32,    wind_speed,        4) \
X(a, STATIC,   REQUIRED, INT32,    wind_direction,    5)
#define Data_CALLBACK NULL
#define Data_DEFAULT NULL

extern const pb_msgdesc_t Data_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Data_fields &Data_msg

/* Maximum encoded size of messages (where known) */
#define Data_size                                49
#define WEATHER_PB_H_MAX_SIZE                    Data_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
